include <lib.scad>
pcb_height = 1.6;
pcb_height = 1.60000;
module pcb(){
   difference(){
      color("green") linear_extrude(height = 1.60000, convexity = 10, twist = 0) polygon( points=[
         [99.00000, -49.75000], 
         [98.00000, -50.75000], 
         [98.00000, -90.00000], 
         [99.00000, -91.00000], 
         [102.25000, -91.00000], 
         [103.75000, -92.50000], 
         [103.75000, -95.50000], 
         [104.75000, -96.50000], 
         [107.50000, -96.50000], 
         [109.00000, -98.00000], 
         [109.00000, -100.50000], 
         [110.00000, -101.50000], 
         [111.00000, -101.50000], 
         [111.00000, -104.50000], 
         [110.00000, -105.50000], 
         [110.00000, -148.75000], 
         [111.00000, -149.75000], 
         [197.00000, -149.75000], 
         [198.00000, -148.75000], 
         [198.00000, -106.00000], 
         [197.00000, -105.00000], 
         [185.50000, -105.00000], 
         [185.50000, -102.00000], 
         [197.00000, -102.00000], 
         [198.00000, -101.00000], 
         [198.00000, -50.75000], 
         [197.00000, -49.75000], 
         [99.00000, -49.75000], 
      ]);
      color("green") translate([0, 0, -0.1]) linear_extrude(height = 1.60000 + 0.2, convexity = 10, twist = 0) polygon( points=[
         [115.50000, -104.50000], 
         [115.50000, -101.50000], 
         [127.50000, -101.50000], 
         [128.50000, -100.50000], 
         [128.50000, -100.00000], 
         [129.50000, -99.00000], 
         [133.50000, -99.00000], 
         [134.50000, -100.00000], 
         [134.50000, -100.50000], 
         [135.50000, -101.50000], 
         [140.50000, -101.50000], 
         [140.50000, -104.50000], 
         [115.50000, -104.50000], 
      ]);
      color("green") translate([0, 0, -0.1]) linear_extrude(height = 1.60000 + 0.2, convexity = 10, twist = 0) polygon( points=[
         [147.00000, -104.50000], 
         [147.00000, -101.50000], 
         [181.00000, -101.50000], 
         [181.00000, -104.50000], 
         [171.50000, -104.50000], 
         [170.50000, -105.50000], 
         [170.50000, -111.00000], 
         [167.50000, -111.00000], 
         [167.50000, -105.50000], 
         [166.50000, -104.50000], 
         [147.00000, -104.50000], 
      ]);
   }
}
module place(){
   translate([160.500000, -135.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 45.000000]) C_Radial_D26_L45_P10(); // C21 270µ
   translate([133.500000, -135.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 135.000000]) C_Radial_D26_L45_P10(); // C22 270µ
   translate([143.250000, -77.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 180.000000]) ESD(); // G*** ESD
   translate([201.000000, -92.500000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 90.000000]) RJ45_LED(); // J1 RJ45_LED
   translate([201.000000, -76.000000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 90.000000]) RJ45_LED(); // J2 RJ45_LED
   translate([201.000000, -59.500000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 90.000000]) RJ45_LED(); // J3 RJ45_LED
   translate([176.000000, -112.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 0.000000]) SOLDER_JUMPER(); // JP1 Jumper_NO_Small
   translate([107.750000, -88.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 180.000000]) Symbol_OSHW_Logo_SilkScreen(); // LOGO1 OPEN_HARDWARE_1
   translate([147.000000, -144.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 180.000000]) Symbol_OSHW_Logo_SilkScreen(); // LOGO1 OPEN_HARDWARE_1
   translate([117.000000, -146.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 90.000000]) akl182_2(); // P2 CONN_01X02
   translate([103.000000, -59.500000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 90.000000]) akl182_2(); // P3 CONN_01X02
   translate([126.750000, -67.040000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 0.000000]) Pin_Header_Angled_1x02(); // P4 CONN_01X02
   translate([103.000000, -82.500000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 90.000000]) akl182_6(); // P5 CONN_01X06
   translate([119.000000, -123.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 270.000000]) RM5_08_1x2(); // P6 CONN_01X02
   translate([186.500000, -118.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 270.000000]) Pin_Header_Straight_1x04(); // P7 CONN_01X04
   translate([119.000000, -106.920000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 270.000000]) RM5_08_1x3(); // P8 CONN_01X03
   translate([108.000000, -56.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 0.000000]) akl182_6(); // P9 CONN_01X06
   translate([139.000000, -61.500000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 0.000000]) Socket_Strip_Angled_2x06(); // P10 CONN_02X06
   translate([178.920000, -107.250000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 270.000000]) Pin_Header_Straight_1x04(); // P12 CONN_01X04
   translate([161.000000, -108.500000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 180.000000]) Socket_Strip_Straight_1x04(); // P13 CONN_01X04
   translate([131.000000, -56.750000, 0]) rotate([180, 0, 0]) rotate([0, 0, 360 - 0.000000]) akl182_2(); // P15 CONN_01X02
   translate([196.750000, -117.750000, 1.60000]) rotate([0, 0, 270.000000]) LED_0805(); // D1 red
   translate([99.000000, -80.750000, 1.60000]) rotate([0, 0, 90.000000]) LED_0805(); // D4 green
   translate([112.750000, -126.250000, 1.60000]) rotate([0, 0, 90.000000]) LED_0805(); // D8 green
   translate([99.000000, -73.750000, 1.60000]) rotate([0, 0, 90.000000]) LED_0805(); // D14 green
   translate([99.000000, -66.750000, 1.60000]) rotate([0, 0, 90.000000]) LED_0805(); // D15 green
   translate([150.500000, -50.750000, 1.60000]) rotate([0, 0, 0.000000]) LED_0805(); // D16 red
   translate([145.250000, -50.750000, 1.60000]) rotate([0, 0, 0.000000]) LED_0805(); // D17 yellow
   translate([140.000000, -50.750000, 1.60000]) rotate([0, 0, 0.000000]) LED_0805(); // D18 green
   translate([111.500000, -50.750000, 1.60000]) rotate([0, 0, 0.000000]) LED_0805(); // D19 green
   translate([122.000000, -50.750000, 1.60000]) rotate([0, 0, 0.000000]) LED_0805(); // D20 green
   translate([99.000000, -57.750000, 1.60000]) rotate([0, 0, 90.000000]) LED_0805(); // D24 green
   translate([160.500000, -51.750000, 1.60000]) rotate([0, 0, 180.000000]) USB_Micro_B_10103594_0001LF(); // P1 USB_OTG
   translate([195.750000, -111.000000, 1.60000]) rotate([0, 0, 90.000000]) USB_Micro_B_10103594_0001LF(); // P11 USB_OTG
   translate([147.000000, -99.750000, 1.60000]) rotate([0, 0, 270.000000]) Pin_Header_Angled_1x04(); // P14 CONN_01X04
   translate([147.000000, -136.750000, 1.60000]) rotate([0, 0, 180.000000]) IRAM256(); // U12 IRAM256a
   }
